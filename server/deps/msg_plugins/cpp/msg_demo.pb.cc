// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_demo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msg_demo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* xx2demo_req_item_buy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  xx2demo_req_item_buy_reflection_ = NULL;
const ::google::protobuf::Descriptor* demo2xx_ntf_item_reduce_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  demo2xx_ntf_item_reduce_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_msg_5fdemo_2eproto() {
  protobuf_AddDesc_msg_5fdemo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "msg_demo.proto");
  GOOGLE_CHECK(file != NULL);
  xx2demo_req_item_buy_descriptor_ = file->message_type(0);
  static const int xx2demo_req_item_buy_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(xx2demo_req_item_buy, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(xx2demo_req_item_buy, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(xx2demo_req_item_buy, res_),
  };
  xx2demo_req_item_buy_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      xx2demo_req_item_buy_descriptor_,
      xx2demo_req_item_buy::default_instance_,
      xx2demo_req_item_buy_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(xx2demo_req_item_buy, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(xx2demo_req_item_buy, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(xx2demo_req_item_buy));
  demo2xx_ntf_item_reduce_descriptor_ = file->message_type(1);
  static const int demo2xx_ntf_item_reduce_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(demo2xx_ntf_item_reduce, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(demo2xx_ntf_item_reduce, num_),
  };
  demo2xx_ntf_item_reduce_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      demo2xx_ntf_item_reduce_descriptor_,
      demo2xx_ntf_item_reduce::default_instance_,
      demo2xx_ntf_item_reduce_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(demo2xx_ntf_item_reduce, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(demo2xx_ntf_item_reduce, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(demo2xx_ntf_item_reduce));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_msg_5fdemo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    xx2demo_req_item_buy_descriptor_, &xx2demo_req_item_buy::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    demo2xx_ntf_item_reduce_descriptor_, &demo2xx_ntf_item_reduce::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_msg_5fdemo_2eproto() {
  delete xx2demo_req_item_buy::default_instance_;
  delete xx2demo_req_item_buy_reflection_;
  delete demo2xx_ntf_item_reduce::default_instance_;
  delete demo2xx_ntf_item_reduce_reflection_;
}

void protobuf_AddDesc_msg_5fdemo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016msg_demo.proto\"<\n\024xx2demo_req_item_buy"
    "\022\n\n\002id\030\001 \001(\r\022\013\n\003num\030\002 \001(\r\022\013\n\003res\030\003 \001(\r\"2"
    "\n\027demo2xx_ntf_item_reduce\022\n\n\002id\030\001 \001(\r\022\013\n"
    "\003num\030\002 \001(\r", 130);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_demo.proto", &protobuf_RegisterTypes);
  xx2demo_req_item_buy::default_instance_ = new xx2demo_req_item_buy();
  demo2xx_ntf_item_reduce::default_instance_ = new demo2xx_ntf_item_reduce();
  xx2demo_req_item_buy::default_instance_->InitAsDefaultInstance();
  demo2xx_ntf_item_reduce::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_msg_5fdemo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_msg_5fdemo_2eproto {
  StaticDescriptorInitializer_msg_5fdemo_2eproto() {
    protobuf_AddDesc_msg_5fdemo_2eproto();
  }
} static_descriptor_initializer_msg_5fdemo_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int xx2demo_req_item_buy::kIdFieldNumber;
const int xx2demo_req_item_buy::kNumFieldNumber;
const int xx2demo_req_item_buy::kResFieldNumber;
#endif  // !_MSC_VER

xx2demo_req_item_buy::xx2demo_req_item_buy()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:xx2demo_req_item_buy)
}

void xx2demo_req_item_buy::InitAsDefaultInstance() {
}

xx2demo_req_item_buy::xx2demo_req_item_buy(const xx2demo_req_item_buy& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:xx2demo_req_item_buy)
}

void xx2demo_req_item_buy::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = 0u;
  res_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

xx2demo_req_item_buy::~xx2demo_req_item_buy() {
  // @@protoc_insertion_point(destructor:xx2demo_req_item_buy)
  SharedDtor();
}

void xx2demo_req_item_buy::SharedDtor() {
  if (this != default_instance_) {
  }
}

void xx2demo_req_item_buy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* xx2demo_req_item_buy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return xx2demo_req_item_buy_descriptor_;
}

const xx2demo_req_item_buy& xx2demo_req_item_buy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdemo_2eproto();
  return *default_instance_;
}

xx2demo_req_item_buy* xx2demo_req_item_buy::default_instance_ = NULL;

xx2demo_req_item_buy* xx2demo_req_item_buy::New() const {
  return new xx2demo_req_item_buy;
}

void xx2demo_req_item_buy::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<xx2demo_req_item_buy*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, res_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool xx2demo_req_item_buy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xx2demo_req_item_buy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }

      // optional uint32 num = 2;
      case 2: {
        if (tag == 16) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_res;
        break;
      }

      // optional uint32 res = 3;
      case 3: {
        if (tag == 24) {
         parse_res:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &res_)));
          set_has_res();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xx2demo_req_item_buy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xx2demo_req_item_buy)
  return false;
#undef DO_
}

void xx2demo_req_item_buy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xx2demo_req_item_buy)
  // optional uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  // optional uint32 res = 3;
  if (has_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->res(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xx2demo_req_item_buy)
}

::google::protobuf::uint8* xx2demo_req_item_buy::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:xx2demo_req_item_buy)
  // optional uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  // optional uint32 res = 3;
  if (has_res()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->res(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xx2demo_req_item_buy)
  return target;
}

int xx2demo_req_item_buy::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

    // optional uint32 res = 3;
    if (has_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->res());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void xx2demo_req_item_buy::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const xx2demo_req_item_buy* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const xx2demo_req_item_buy*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void xx2demo_req_item_buy::MergeFrom(const xx2demo_req_item_buy& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_res()) {
      set_res(from.res());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void xx2demo_req_item_buy::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void xx2demo_req_item_buy::CopyFrom(const xx2demo_req_item_buy& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool xx2demo_req_item_buy::IsInitialized() const {

  return true;
}

void xx2demo_req_item_buy::Swap(xx2demo_req_item_buy* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(res_, other->res_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata xx2demo_req_item_buy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = xx2demo_req_item_buy_descriptor_;
  metadata.reflection = xx2demo_req_item_buy_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int demo2xx_ntf_item_reduce::kIdFieldNumber;
const int demo2xx_ntf_item_reduce::kNumFieldNumber;
#endif  // !_MSC_VER

demo2xx_ntf_item_reduce::demo2xx_ntf_item_reduce()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:demo2xx_ntf_item_reduce)
}

void demo2xx_ntf_item_reduce::InitAsDefaultInstance() {
}

demo2xx_ntf_item_reduce::demo2xx_ntf_item_reduce(const demo2xx_ntf_item_reduce& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:demo2xx_ntf_item_reduce)
}

void demo2xx_ntf_item_reduce::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

demo2xx_ntf_item_reduce::~demo2xx_ntf_item_reduce() {
  // @@protoc_insertion_point(destructor:demo2xx_ntf_item_reduce)
  SharedDtor();
}

void demo2xx_ntf_item_reduce::SharedDtor() {
  if (this != default_instance_) {
  }
}

void demo2xx_ntf_item_reduce::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* demo2xx_ntf_item_reduce::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return demo2xx_ntf_item_reduce_descriptor_;
}

const demo2xx_ntf_item_reduce& demo2xx_ntf_item_reduce::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fdemo_2eproto();
  return *default_instance_;
}

demo2xx_ntf_item_reduce* demo2xx_ntf_item_reduce::default_instance_ = NULL;

demo2xx_ntf_item_reduce* demo2xx_ntf_item_reduce::New() const {
  return new demo2xx_ntf_item_reduce;
}

void demo2xx_ntf_item_reduce::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<demo2xx_ntf_item_reduce*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, num_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool demo2xx_ntf_item_reduce::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:demo2xx_ntf_item_reduce)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }

      // optional uint32 num = 2;
      case 2: {
        if (tag == 16) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:demo2xx_ntf_item_reduce)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:demo2xx_ntf_item_reduce)
  return false;
#undef DO_
}

void demo2xx_ntf_item_reduce::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:demo2xx_ntf_item_reduce)
  // optional uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:demo2xx_ntf_item_reduce)
}

::google::protobuf::uint8* demo2xx_ntf_item_reduce::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:demo2xx_ntf_item_reduce)
  // optional uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:demo2xx_ntf_item_reduce)
  return target;
}

int demo2xx_ntf_item_reduce::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void demo2xx_ntf_item_reduce::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const demo2xx_ntf_item_reduce* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const demo2xx_ntf_item_reduce*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void demo2xx_ntf_item_reduce::MergeFrom(const demo2xx_ntf_item_reduce& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void demo2xx_ntf_item_reduce::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void demo2xx_ntf_item_reduce::CopyFrom(const demo2xx_ntf_item_reduce& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool demo2xx_ntf_item_reduce::IsInitialized() const {

  return true;
}

void demo2xx_ntf_item_reduce::Swap(demo2xx_ntf_item_reduce* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata demo2xx_ntf_item_reduce::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = demo2xx_ntf_item_reduce_descriptor_;
  metadata.reflection = demo2xx_ntf_item_reduce_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
